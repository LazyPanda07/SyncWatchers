name: "Continues Integration"


on:
  push:
    branches:
    - master
    - dev
  workflow_dispatch:


env:
  flutter-version: 3.35.5
  version: 0.1.0


permissions:
  contents: write


jobs:
  windows-tests:
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Enable NMake
      uses: ilammy/msvc-dev-cmd@v1.13.0

    - name: Build
      working-directory: Tests
      run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -G "Ninja" ..
          cmake --build . -j --config Release
          cmake --install . --config Release

    - name: Tests
      working-directory: Tests/build/bin
      run: .\Tests
          

  linux-tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Build
      working-directory: Tests
      run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -G "Ninja" ..
          cmake --build . -j --config Release
          cmake --install . --config Release

    - name: Tests
      working-directory: Tests/build/bin
      run: |
          export LD_LIBRARY_PATH=$(pwd):${LD_LIBRARY_PATH}
          ./Tests


  docker-tests:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
  
    - name: Build image
      run: sudo docker build . -t lazypanda07/sync_watchers:${{ env.version }}

    - name: Build Tests
      working-directory: Tests
      run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -G "Ninja" ..
          cmake --build . -j --config Release
          cmake --install . --config Release

    - name: Tests
      working-directory: Tests/build/bin
      run: |
          export LD_LIBRARY_PATH=$(pwd):${LD_LIBRARY_PATH}
          sudo docker run -d -p 52000:52000 -p 52001:52001 lazypanda07/sync_watchers:${{ env.version }}
          ./Tests --external_server


  build-windows:
    needs: windows-tests
    runs-on: windows-latest
    
    steps:
    - uses: actions/checkout@v4
  
    - name: Enable NMake
      uses: ilammy/msvc-dev-cmd@v1.13.0
  
    - name: Install Flutter
      uses: subosito/flutter-action@v2.16.0
      with:
        channel: stable
        flutter-version: ${{ env.flutter-version }}
    
    - name: Build
      run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=bin -DWITH_WINDOWS_CLIENT=ON -G "Ninja" ..
          cmake --build . -j --config Release
          cmake --install . --config Release

    - name: Move app
      shell: bash
      run: |
          mkdir windows
          mv build/bin/windows/* windows

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: windows-server
        path: build/bin

    - name: Upload Flutter app
      uses: actions/upload-artifact@v4
      with:
        name: flutter-windows-client
        path: windows
            
            
  build-linux:
    needs: linux-tests
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v4
    
    - name: Install Flutter
      uses: subosito/flutter-action@v2.16.0
      with:
        channel: stable
        flutter-version: ${{ env.flutter-version }}

    - name: Build
      run: |
          mkdir build
          cd build
          cmake -DCMAKE_BUILD_TYPE=Release -DCMAKE_INSTALL_PREFIX=bin -DWITH_ANDROID_CLIENT=ON -G "Ninja" ..
          cmake --build . -j --config Release
          cmake --install . --config Release

    - name: Move app
      run: |
          mkdir android
          mv build/bin/android/app-arm64-v8a-release.apk android

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: linux-server
        path: build/bin

    - name: Upload Flutter apps
      uses: actions/upload-artifact@v4
      with:
        name: flutter-android-client
        path: android


  publish:
    needs: [
      build-windows,
      build-linux,
      docker-tests
    ]
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write

    steps:
    - uses: actions/checkout@v4

    - name: Get current branch
      uses : LazyPanda07/extract-current-branch@master
    
    - name: Download artifacts
      if: ${{ env.CURRENT_BRANCH == 'master' }}
      uses: actions/download-artifact@v4
      
    - name: Create Windows zip
      if: ${{ env.CURRENT_BRANCH == 'master' }}
      run: zip -r windows-server.zip windows-server

    - name: Create Linux zip
      if: ${{ env.CURRENT_BRANCH == 'master' }}
      run: zip -r linux-server.zip linux-server

    - name: Create Flutter zip
      if: ${{ env.CURRENT_BRANCH == 'master' }}
      run: zip -r flutter-clients.zip flutter-windows-client flutter-android-client
      
    - name: Publish binaries
      if: ${{ env.CURRENT_BRANCH == 'master' }}
      run: gh release create v${{ env.version }} *.zip --title v${{ env.version }} --generate-notes
      env:
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Publish Docker image
      if: ${{ env.CURRENT_BRANCH == 'master' }}
      run: |
          sudo docker build . -t lazypanda07/sync_watchers:${{ env.version }}
          sudo docker build . -t ghcr.io/lazypanda07/sync_watchers:${{ env.version }}
          sudo docker login -u "${{ secrets.DOCKER_HUB_LOGIN }}" -p "${{ secrets.DOCKER_HUB_PASSWORD }}"
          sudo docker push lazypanda07/sync_watchers:${{ env.version }}
          echo ${{ secrets.GITHUB_TOKEN }} | sudo docker login ghcr.io -u LazyPanda07 --password-stdin
          sudo docker push ghcr.io/lazypanda07/sync_watchers:${{ env.version }}
          